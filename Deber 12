double matriz[100][3] = {
  {194, 474, 1},
  {194, 474, 1},
  {194, 475, 1},
  {194, 475, 1},
  {194, 475, 1},
  {194, 474, 1},
  {195, 475, 1},
  {194, 474, 1},
  {194, 475, 1},
  {193, 475, 1},
  {194, 475, 1},
  {194, 475, 1},
  {195, 475, 1},
  {196, 475, 1},
  {194, 474, 1},
  {195, 474, 1},
  {195, 474, 1},
  {193, 475, 1},
  {193, 475, 1},
  {288, 458, 1},
  {233, 457, 1},
  {234, 457, 1},
  {234, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {234, 457, 1},
  {234, 457, 1},
  {234, 457, 1},
  {234, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {233, 457, 1},
  {234, 457, 1},
  {234, 457, 1},
  {234, 457, 1},
  {210, 469, 1},
  {211, 468, 1},
  {212, 468, 1},
  {213, 468, 1},
  {212, 468, 1},
  {211, 468, 1},
  {214, 468, 1},
  {213, 468, 1},
  {214, 467, 1},
  {263, 448, 2},
  {238, 436, 2},
  {238, 436, 2},
  {237, 436, 2},
  {239, 436, 2},
  {236, 436, 2},
  {237, 436, 2},
  {236, 436, 2},
  {237, 436, 2},
  {234, 437, 2},
  {237, 436, 2},
  {236, 436, 2},
  {235, 436, 2},
  {235, 436, 2},
  {235, 436, 2},
  {235, 436, 2},
  {236, 436, 2},
  {237, 436, 2},
  {231, 436, 2},
  {187, 453, 2},
  {168, 442, 2},
  {168, 442, 2},
  {167, 442, 2},
  {168, 442, 2},
  {168, 442, 2},
  {169, 442, 2},
  {168, 442, 2},
  {168, 442, 2},
  {169, 442, 2},
  {169, 442, 2},
  {169, 442, 2},
  {169, 442, 2},
  {168, 442, 2},
  {169, 442, 2},
  {169, 442, 2},
  {169, 442, 2},
  {169, 441, 2},
  {169, 442, 2},
  {170, 442, 2},
  {169, 442, 2},
  {156, 439, 2},
  {187, 453, 2},
  {187, 453, 2},
  {188, 453, 2},
  {188, 453, 2},
  {188, 453, 2},
  {186, 453, 2},
  {188, 453, 2},
  {188, 453, 2},
  {186, 453, 2},

};

double datosPrueba[20][3] = {
  {212, 468, 1},
  {211, 468, 1},
  {212, 468, 1},
  {212, 469, 1},
  {215, 468, 1},
  {214, 468, 1},
  {304, 467, 1},
  {305, 467, 1},
  {304, 467, 1},
  {305, 467, 1},
  {188, 453, 2},
  {187, 453, 2},
  {187, 453, 2},
  {187, 453, 2},
  {171, 442, 2},
  {169, 442, 2},
  {168, 441, 2},
  {187, 453, 2},
  {187, 453, 2},
  {188, 453, 2},



};

void setup() {
  Serial.begin(9600);

}

void loop() {
  KnnA(5);
  delay(20000);


}

void KnnA(int val) {
  
  double aux;
  double aux1;

  double distancia[100][2];
  double distancia1;
  for (int j=0; j<20; j++) {
    for (int i=0; i<100; i++) {
      distancia1=sqrt(pow(datosPrueba[j][0] - matriz[i][0], 2) + pow(datosPrueba[j][1] - matriz[i][1], 2));
      distancia[i][0]=i;
      distancia[i][1]=distancia1;

    }
    for (int p=0; p<100; p++) {
      for (int t=0; t<100-1 ; t++) {
        if (distancia[t][1] > distancia[t+1][1]) {
          aux=distancia[t][1];
          distancia[t][1] = distancia[t + 1][1];
          distancia[t+1][1]=aux;
          // posici√≥n
          aux1=distancia[t][0];
          distancia[t][0]=distancia[t + 1][0];
          distancia[t+1][0]=aux1;
        

        }
        
      }
      
    }
    int contador=0;
    int contador1=0;
    for (int n=0; n<val; n++) {
      if (matriz[int(distancia[0][n])][2]==1) {
        contador++;
      } else if (matriz[int(distancia[0][n])][2]==2){
        contador1++;

      }
    }
    
    if (contador>contador1) {
      Serial.println( String( String(datosPrueba[j][0]) + String(",") + String(datosPrueba[j][1]) + String(",") + String(1)) );
      contador=0;
      contador1=0;
    }
    if (contador1>contador) {

      Serial.println( String( String(datosPrueba[j][0]) + String(",") + String(datosPrueba[j][1]) + String(",") + String(2)) );

      contador=0;
      contador1=0;
    }

    contador=0;
    contador1=0;

  }
}
